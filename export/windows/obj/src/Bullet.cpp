// Generated by Haxe 4.0.0-rc.2+77068e10c
#include <hxcpp.h>

#ifndef INCLUDED_Bullet
#include <Bullet.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_916b41f5f19492cb_5_new,"Bullet","new",0xf3208054,"Bullet.new","Bullet.hx",5,0xb42ce59c)
HX_LOCAL_STACK_FRAME(_hx_pos_916b41f5f19492cb_16_update,"Bullet","update",0xa9584695,"Bullet.update","Bullet.hx",16,0xb42ce59c)

void Bullet_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_916b41f5f19492cb_5_new)
HXLINE(   6)		this->bulletSize = 4;
HXLINE(   9)		super::__construct(null(),null(),null());
HXLINE(  10)		this->loadGraphic(HX_("assets/images/bullet.png",e8,b3,4c,2c),false,32,32,null(),null());
HXLINE(  11)		this->setGraphicSize(this->bulletSize,null());
HXLINE(  12)		this->updateHitbox();
HXLINE(  13)		this->updateFramePixels();
            	}

Dynamic Bullet_obj::__CreateEmpty() { return new Bullet_obj; }

void *Bullet_obj::_hx_vtable = 0;

Dynamic Bullet_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Bullet_obj > _hx_result = new Bullet_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Bullet_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0b6ffd77) {
		if (inClassId<=(int)0x09250662) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x09250662;
		} else {
			return inClassId==(int)0x0b6ffd77;
		}
	} else {
		return inClassId==(int)0x25a685e0 || inClassId==(int)0x2e105115;
	}
}

void Bullet_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_916b41f5f19492cb_16_update)
HXLINE(  17)		if (!(this->isOnScreen(null()))) {
HXLINE(  18)			this->kill();
            		}
HXLINE(  20)		this->super::update(elapsed);
            	}



hx::ObjectPtr< Bullet_obj > Bullet_obj::__new() {
	hx::ObjectPtr< Bullet_obj > __this = new Bullet_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Bullet_obj > Bullet_obj::__alloc(hx::Ctx *_hx_ctx) {
	Bullet_obj *__this = (Bullet_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Bullet_obj), true, "Bullet"));
	*(void **)__this = Bullet_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Bullet_obj::Bullet_obj()
{
}

hx::Val Bullet_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"bulletSize") ) { return hx::Val( bulletSize ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Bullet_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"bulletSize") ) { bulletSize=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Bullet_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("bulletSize",23,a8,e0,14));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Bullet_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(Bullet_obj,bulletSize),HX_("bulletSize",23,a8,e0,14)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Bullet_obj_sStaticStorageInfo = 0;
#endif

static ::String Bullet_obj_sMemberFields[] = {
	HX_("bulletSize",23,a8,e0,14),
	HX_("update",09,86,05,87),
	::String(null()) };

hx::Class Bullet_obj::__mClass;

void Bullet_obj::__register()
{
	Bullet_obj _hx_dummy;
	Bullet_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("Bullet",62,06,25,09);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Bullet_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Bullet_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Bullet_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Bullet_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

