// Generated by Haxe 4.0.0-rc.2+77068e10c
#include <hxcpp.h>

#ifndef INCLUDED_Entity
#include <Entity.h>
#endif
#ifndef INCLUDED_Message
#include <Message.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_system_debug_log_LogStyle
#include <flixel/system/debug/log/LogStyle.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_LogFrontEnd
#include <flixel/system/frontEnds/LogFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6b3cf7183208346f_6_new,"Entity","new",0x9c9485b5,"Entity.new","Entity.hx",6,0x5c8a675b)
HX_LOCAL_STACK_FRAME(_hx_pos_6b3cf7183208346f_8_onMessage,"Entity","onMessage",0x3992d17d,"Entity.onMessage","Entity.hx",8,0x5c8a675b)

void Entity_obj::__construct( ::Dynamic X, ::Dynamic Y, ::Dynamic SimpleGraphic){
            	HX_STACKFRAME(&_hx_pos_6b3cf7183208346f_6_new)
HXDLIN(   6)		super::__construct(X,Y,SimpleGraphic);
            	}

Dynamic Entity_obj::__CreateEmpty() { return new Entity_obj; }

void *Entity_obj::_hx_vtable = 0;

Dynamic Entity_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Entity_obj > _hx_result = new Entity_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool Entity_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x25a685e0) {
		if (inClassId<=(int)0x0b6ffd77) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
		} else {
			return inClassId==(int)0x25a685e0;
		}
	} else {
		return inClassId==(int)0x2e105115 || inClassId==(int)0x39b08743;
	}
}

void Entity_obj::onMessage( ::Message m){
            	HX_STACKFRAME(&_hx_pos_6b3cf7183208346f_8_onMessage)
HXDLIN(   8)		::flixel::FlxG_obj::log->advanced((HX_("Message received. OP --> ",f5,68,9e,db) + m->op),::flixel::_hx_system::debug::log::LogStyle_obj::NORMAL,null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Entity_obj,onMessage,(void))


hx::ObjectPtr< Entity_obj > Entity_obj::__new( ::Dynamic X, ::Dynamic Y, ::Dynamic SimpleGraphic) {
	hx::ObjectPtr< Entity_obj > __this = new Entity_obj();
	__this->__construct(X,Y,SimpleGraphic);
	return __this;
}

hx::ObjectPtr< Entity_obj > Entity_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic X, ::Dynamic Y, ::Dynamic SimpleGraphic) {
	Entity_obj *__this = (Entity_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Entity_obj), true, "Entity"));
	*(void **)__this = Entity_obj::_hx_vtable;
	__this->__construct(X,Y,SimpleGraphic);
	return __this;
}

Entity_obj::Entity_obj()
{
}

hx::Val Entity_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"onMessage") ) { return hx::Val( onMessage_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Entity_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Entity_obj_sStaticStorageInfo = 0;
#endif

static ::String Entity_obj_sMemberFields[] = {
	HX_("onMessage",68,ee,bb,71),
	::String(null()) };

hx::Class Entity_obj::__mClass;

void Entity_obj::__register()
{
	Entity_obj _hx_dummy;
	Entity_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("Entity",43,87,b0,39);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Entity_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Entity_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Entity_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Entity_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

